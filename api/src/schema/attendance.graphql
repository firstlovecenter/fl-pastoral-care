extend type ServiceRecord {
  markedAttendance: Boolean!
  membersPicture: String
  membersPresent: [Member!]!
    @relationship(type: "PRESENT_AT_SERVICE", direction: IN)
  membersAbsent: [Member!]!
    @relationship(type: "ABSENT_FROM_SERVICE", direction: IN)
}

extend type BussingRecord {
  markedAttendance: Boolean!
  membersPicture: String
  membersPresent: [Member!]!
    @relationship(type: "PRESENT_AT_SERVICE", direction: IN)
  membersAbsent: [Member!]!
    @relationship(type: "ABSENT_FROM_SERVICE", direction: IN)
}

type Mutation {
  RecordMemberFellowshipPresent(
    membersPicture: String!
    presentMembers: [ID!]!
    recordId: ID!
  ): ServiceRecord
    @cypher(
      statement: """
      MATCH (service {id: $recordId})
      WHERE service:ServiceRecord OR service:BussingRecord
      SET  service.membersPicture = $membersPicture

      WITH service
      UNWIND $presentMembers AS presentMemberId
      MATCH (present:Member {id: presentMemberId})
      MERGE (present)-[:PRESENT_AT_SERVICE]->(service)

      RETURN service
      """
    )
  RecordMemberFellowshipAbsent(
    absentMembers: [ID!]!
    recordId: ID!
  ): ServiceRecord
    @cypher(
      statement: """
      MATCH (service {id: $recordId})
      WHERE service:ServiceRecord OR service:BussingRecord

      UNWIND $absentMembers AS absentMemberId
      MATCH (absent:Member {id: absentMemberId})
      MERGE (absent)-[:ABSENT_FROM_SERVICE]->(service)

      RETURN service
      """
    )
  RecordMemberBacentaPresent(
    presentMembers: [ID!]!
    churchId: ID!
  ): BussingRecord
    @cypher(
      statement: """
      MATCH (service:BussingRecord {id: $recordId})

      UNWIND $presentMembers AS presentMemberId
      MATCH (member:Member {id: presentMemberId})
      MERGE (member)-[:PRESENT_AT_SERVICE]->(service)

      RETURN service
      """
    )
  RecordMemberBacentaAbsent(
    absentMembers: [ID!]!
    churchId: ID!
  ): BussingRecord
    @cypher(
      statement: """
       MATCH (service:BussingRecord {id: $recordId})

      UNWIND $absentMembers AS absentMemberId
      MATCH (member:Member {id: absentMemberId})
      MERGE (member)-[:ABSENT_FROM_SERVICE]->(service)

      RETURN service
      """
    )
}
